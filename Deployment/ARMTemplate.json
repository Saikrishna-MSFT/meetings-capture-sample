{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "webAppName": {
        "type": "string",
        "metadata": {
            "description": "The name of the web app that you wish to create."
        }
      },
      "customHostname": {
        "type": "string",
        "metadata": {
            "description": "The custom hostname that you wish to add."
        }
      },
      "sqlAdministratorLogin": {
        "type": "string",
        "metadata": {
          "description": "The admin user of the SQL Server"
        }
      },
      "sqlAdministratorLoginPassword": {
        "type": "securestring",
        "metadata": {
          "description": "The password of the admin user of the SQL Server"
        }
      },
      "sqlDatabaseName": {
        "type": "string",
        "defaultValue": "meetingCaptureDemo",
        "metadata": {
          "description": "Database Name"
        }
      },
      "actionMessageOriginatorId":{
        "type": "string",
        "defaultValue": "8390d9dc-8d83-4545-9b6e-78ee304e53d9",
        "metadata": {
          "description": "The originator property is set to a valid provider ID generated by the Actionable Email Developer Dashboard"
        }
      },
      "clientId":{
        "type": "string"
      },
      "clientSecret":{
        "type": "string"
      },
      "tenantId":{
        "type": "string"
      }
    },
    "variables": {
      "hostingPlanName": "[concat('hostingplan', uniqueString(resourceGroup().id))]",
      "sqlServerName": "[concat('sqlserver', uniqueString(resourceGroup().id))]",
      "connections_office365_name": "office365",
      "logicAppName": "SendActionMessage"
    },
    "resources": [
      {
        "name": "[variables('sqlServerName')]",
        "type": "Microsoft.Sql/servers",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "SqlServer"
        },
        "apiVersion": "2014-04-01",
        "properties": {
          "administratorLogin": "[parameters('sqlAdministratorLogin')]",
          "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
          "version": "12.0"
        },
        "resources": [
          {
            "name": "[parameters('sqlDatabaseName')]",
            "type": "databases",
            "location": "[resourceGroup().location]",
            "tags": {
              "displayName": "Database"
            },
            "apiVersion": "2014-04-01",
            "dependsOn": [
              "[variables('sqlServerName')]"
            ],
            "properties": {
              "edition": "Basic",
              "collation": "SQL_Latin1_General_CP1_CI_AS",
              "maxSizeBytes": "1073741824",
              "requestedServiceObjectiveName": "Basic"
            }
          },
          {
            "type": "firewallRules",
            "apiVersion": "2014-04-01",
            "dependsOn": [
              "[variables('sqlServerName')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "AllowAllWindowsAzureIps",
            "properties": {
              "endIpAddress": "0.0.0.0",
              "startIpAddress": "0.0.0.0"
            }
          }
        ]
      },
      {
        "apiVersion": "2018-02-01",
        "name": "[variables('hostingPlanName')]",
        "type": "Microsoft.Web/serverfarms",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "HostingPlan"
        },
        "sku": {
          "tier": "Basic",
          "name": "B1"
        },
        "properties": {
          "name": "[variables('hostingPlanName')]"
        }
      },
      {
        "apiVersion": "2018-02-01",
        "name": "[parameters('webAppName')]",
        "type": "Microsoft.Web/sites",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[variables('hostingPlanName')]"
        ],
        "tags": {
          "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName')))]": "empty",
          "displayName": "Website"
        },
        "properties": {
          "name": "[parameters('webAppName')]",
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "siteConfig":{
            "alwaysOn":true
          }
        },
        "resources": [
          {
            "apiVersion": "2018-02-01",
            "type": "config",
            "name": "connectionstrings",
            "dependsOn": [
              "[parameters('webAppName')]"
            ],
            "properties": {
              "DefaultConnection": {
                "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('sqlDatabaseName'), ';User Id=', parameters('sqlAdministratorLogin'), '@', reference(concat('Microsoft.Sql/servers/', variables('sqlServerName'))).fullyQualifiedDomainName, ';Password=', parameters('sqlAdministratorLoginPassword'), ';')]",
                "type": "SQLAzure"
              }
            }
          },
          {
            "apiVersion": "2018-02-01",
            "type": "config",
            "name": "appsettings",
            "dependsOn": [
              "[parameters('webAppName')]",
              "[variables('sqlServerName')]",
              "[variables('logicAppName')]"
            ],
            "properties":{
              "JobIntervalMin": "360",
              "AdvanceMin": "1440",
              "TimeRange": "360",
              "OriginatorId": "[parameters('actionMessageOriginatorId')]",
              "LogicAppEmailSettings:TriggerUri": "[listCallbackUrl(resourceId('Microsoft.Logic/workflows/triggers', variables('logicAppName'), 'manual'), '2016-06-01').value]",
              "AzureAd:TenantId": "[parameters('tenantId')]",
              "AzureAd:ClientId":"[parameters('clientId')]",
              "AzureAd:ClientSecret":"[parameters('clientSecret')]",
              "AzureAd:TeamTabResource":"[concat(parameters('customHostname'),'/', parameters('clientId'))]",
              "AzureAd:BaseUrl": "https://graph.microsoft.com"
            }
          }
        ]
      },
      {
        "type":"Microsoft.Web/sites/hostnameBindings",
        "name":"[concat(parameters('webAppName'), '/', parameters('customHostname'))]",
        "apiVersion":"2016-03-01",
        "location":"[resourceGroup().location]",
        "properties":{
        },
        "dependsOn": [
            "[concat('Microsoft.Web/sites/',parameters('webAppName'))]"
        ]
      },
      {
        "type": "Microsoft.Web/connections",
        "apiVersion": "2016-06-01",
        "name": "[variables('connections_office365_name')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "displayName": "admin@cand3.onmicrosoft.com",
          "customParameterValues": {},
          "api": {
            "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
          }
        }
      },
      {
        "type": "Microsoft.Logic/workflows",
        "apiVersion": "2017-07-01",
        "name": "[variables('logicAppName')]",
        "dependsOn": [
          "[variables('connections_office365_name')]"
        ],
        "location": "[resourceGroup().location]",
        "properties": {
          "state": "Enabled",
          "definition": {
            "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
              "$connections": {
                "defaultValue": {},
                "type": "Object"
              }
            },
            "triggers": {
              "manual": {
                "type": "Request",
                "kind": "Http",
                "inputs": {
                  "schema": {
                    "properties": {
                      "body": {
                        "type": "string"
                      },
                      "mailTo": {
                        "type": "string"
                      },
                      "subject": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "actions": {
              "Send_an_email_(V2)": {
                "runAfter": {},
                "type": "ApiConnection",
                "inputs": {
                  "body": {
                    "Body": "@{triggerBody()?['body']}",
                    "IsHtml": true,
                    "Subject": "@triggerBody()?['subject']",
                    "To": "@triggerBody()?['mailTo']"
                  },
                  "host": {
                    "connection": {
                      "name": "@parameters('$connections')['office365']['connectionId']"
                    }
                  },
                  "method": "post",
                  "path": "/v2/Mail"
                }
              }
            },
            "outputs": {}
          },
          "parameters": {
            "$connections": {
              "value": {
                "office365": {
                  "connectionId": "[resourceId('Microsoft.Web/connections', variables('connections_office365_name'))]",
                  "id": "[concat(subscription().id,'/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                }
              }
            }
          }
        }
      }
    ],
    "outputs": {
      "siteUri": {
        "type": "string",
        "value": "[reference(concat('Microsoft.Web/sites/', parameters('webAppName'))).hostnames[0]]"
      },
      "sqlSvrFqdn": {
        "type": "string",
        "value": "[reference(concat('Microsoft.Sql/servers/', variables('sqlServerName'))).fullyQualifiedDomainName]"
      },
      "logicAppUrl": {
        "type": "string",
        "value": "[listCallbackUrl(resourceId('Microsoft.Logic/workflows/triggers', variables('logicAppName'), 'manual'), '2016-06-01').value]"
      }
    }
  }
  
